Создание загрузочного USB

Важно: Это уничтожит безвозвратно все файлы на /dev/sdx. Чтобы восстановить USB-накопитель как пустое, пригодное для использования запоминающее устройство после использования ISO-образа Arch, необходимо удалить подпись файловой системы ISO 9660, выполнив wipefs --all /dev/sdx от суперпользователя, перед разметкой и форматированием.
```
# dd bs=4M if=путь/до/archlinux.iso of=/dev/sdx status=progress oflag=sync
```


Установка раскладки клавиатуры и шрифта

```
# loadkeys ru
```

```
# setfont cyr-sun16
```

Проверка режима загрузки

Чтобы проверить режим загрузки, проверьте разрядность UEFI:
```
# cat /sys/firmware/efi/fw_platform_size
```
Если команда выведет 64, то система загружена в режиме UEFI и имеет 64-битный x64 UEFI.

Соединение с интернетом

```
# ping archlinux.org
```

Синхронизация системных часов


Правильно настроенное время в live‑окружении необходимо для избежания проблем со скачиванием пакетов. Проверь настройки даты и времени:
```
timedatectl
```

Убедись, что «System clock synchronized» имеет статус «yes». А если нет, то установи утилиту chrony:
```
pacman -S chrony
```

Запусти chrony:
```
systemctl start chronyd
```

(Обрати внимание на название запускаемой службы, её имя немного отличается от названия самой утилиты)

Перепроверь статус синхронизации времени:
```
timedatectl
```

Разметка дисков


Когда запущенная система распознает накопители, они становятся доступны как блочные устройства, например, /dev/sda, /dev/nvme0n1 или /dev/mmcblk0. Чтобы посмотреть их список, используйте lsblk или fdisk.

```
# fdisk -l

```

Результаты, оканчивающиеся на rom, loop и airootfs, можно игнорировать. Устройства mmcblk*, оканчивающиеся на rpbm, boot0 и boot1, тоже можно игнорировать.

	Примечание: Если диск не отображается, убедитесь, что контроллер диска не находится в режиме RAID.

	Совет: Перед разметкой NVMe-накопителей и жёстких дисков с расширенным форматом (Advanced Format) проверьте, что они используют оптимальный логический размер сектора.

На выбранном накопителе должны присутствовать следующие разделы:

- Раздел для корневого каталога /.
- Для загрузки в режиме UEFI также необходим системный раздел EFI.

Для изменения таблицы разделов используйте инструмент разметки, например fdisk:

```
# fdisk /dev/диск_для_разметки
```
My disk was GPT Guid Partition Table, made new partition sda1, sda2 and sda3
sda1 = root (/) 25GB    Type (23)sda2 = boot (/boot) 1GB  Type (1)sda3 = home (/home) allGB  Type (42)- For boot partition go to type and select "EFI System"

Форматирование разделов

- 
  Format root as ext4
```
mkfs.ext4 /dev/sda1 

```
- Format boot as FAT32 for EFI boot (GRUB)
```
mkfs.fat -F 32 /dev/sda2

```
- Format home as ext4
```
mkfs.ext4 /dev/sda3 
```

Монтирование разделов

- Mount the root (/) partition
```
mount /dev/sda1 /mnt

```
- Mount boot (/boot)
```
mkdir /mnt/boot

```

```
mount /dev/sda2 /mnt/boot

```
- Mount home (/home)
```
mkdir /mnt/home

```

```
mount /dev/sda3 /mnt/home
```

Run lsblk to check disks


```
lsblk

```

They should look like this:


```
sda1 = /mnt
sda2 = /mnt/boot
sda3 = /mnt/home
```

Установка основных пакетов

```
# pacstrap -K /mnt base base-devel linux linux-firmware vim
```

Fstab


Сгенерируйте файл fstab (используйте ключ -U или -L, чтобы для идентификации разделов использовались UUID или метки, соответственно):

Generate fstab with UUID's

```
# genfstab -U /mnt >> /mnt/etc/fstab

```

После этого проверьте файл /mnt/etc/fstab и отредактируйте его в случае необходимости.


Chroot


Перейдите к корневому каталогу новой системы:

```
# arch-chroot /mnt /bin/bash
```

Время


Задайте часовой пояс:

```
# ln -sf /usr/share/zoneinfo/Регион/Город /etc/localtime

```

Запустите hwclock(8), чтобы сгенерировать /etc/adjtime:

```
# hwclock --systohc

```

Эта команда предполагает, что аппаратные часы настроены в формате UTC


Локализация


Отредактируйте файл /etc/locale.gen, раскомментировав en_US.UTF-8 UTF-8 и другие необходимые UTF-8 локали (например, ru_RU.UTF-8 UTF-8), после чего сгенерируйте их:

```
# locale-gen

```

Создайте файл locale.conf(5) и задайте переменной LANG необходимое значение:

```
/etc/locale.conf
```

```
LANG=ru_RU.UTF-8
```

Если вы меняли раскладку клавиатуры или шрифт, сделайте эти изменения постоянными, прописав их в файле vconsole.conf(5):

```
/etc/vconsole.conf
```

```
KEYMAP=ru
FONT=cyr-sun16
```

Настройка сети


Создайте файл hostname:

```
/etc/hostname
```

```
имявашегохоста

```

Завершите настройку сети для вновь установленной среды. В частности, установите подходящее ПО для управления сетевым подключением, настройте его по необходимости и включите соответствующий юнит systemd, чтобы подключение к сети выполнялось сразу при загрузке системы.


Pacman more things. (if u don't need efi, omit efibootmgrfrom command)


```
pacman -S networkmanager grub efibootmgr git

```

- Enable Network Manager


```
systemctl enable NetworkManager

```

- Install GRUB (2 methods)



Method 1 - EFI


```
grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB
```

Make GRUB config


```
grub-mkconfig -o /boot/grub/grub.cfg
```

Пароль суперпользователя


Установите пароль суперпользователя:

```
# passwd
```

Exit from chroot environment


```
exit

```

- Unmount root, boot and home


```
umount -R /mnt

```
^ this command unmounts everything.

- Reboot


```
reboot

```

Select the bootable disk in the boot menu NOT the live USB.



- Login


```
name: root
password: (The password you set earlier when you did `passwd`)
```

BASIC ARCH INSTALL COMPLETED!


Чтобы получить значение столбца class, запустите команду
1. xprop | grep WM_CLASS
Определение клавиш




Adding a user


```
useradd -mg wheel USERNAMEHERE

```
- Replace USERNAMEHERE with your username of course e.g. useradd -mg wheel dante

- Setting a password for the user


```
passwd USERNAMEHERE
```

Set sudo permissions for user(s)


```
vim /etc/sudoers

```
- Find and uncomment: # %wheel ALL=(ALL) ALL
- Change it to look like this:
```
%wheel ALL=(ALL) ALL

```
- Add in a line of code below:
```
Defaults !tty_tickets
```

vim /etc/fstab

UUID=68ae5479-3653-4306-b75c-633173145524 none            swap    sw              0       0
/dev/disk/by-uuid/da84b23d-b243-428b-aaa9-59f104d51346 /media/home2 auto nosuid,nodev,nofail,x-gvfs-show 0 0




Install xorg


```
pacman -S xorg-server xorg-xinit xorg-xsetroot xorg-xev

```

- Exit root


```
exit

```

- Log into your user


- Enter your user name and password

lspci | grep VGA
01:00.0 VGA compatible controller: NVIDIA Corporation GK208B [GeForce GT 710] (rev a1)
sudo pacman -S xf86-video-nouveau
sudo pacman -S xf86-video-intel
sudo pacman -S xf86-video-ati


DWM (Dynamic Window Manager)

sudo pacman -S mc wget curl notepadqq mousepad alacritty
sudo pacman -S btop htop atop bind dmidecode eza
sudo pacman -Syu
mkdir ~/.config
sudo pacman -S xdg-utils xdg-user-dirs
echo 'en_US' > ~/.config/user-dirs.locale
LC_ALL=en_US xdg-user-dirs-update --force
mkdir ~/Screenshots
sudo pacman -S openssh
ssh-keygen -t ed25519 -C 319_2_amar@grid.kiae.ru
sudo pacman -S sxhkd

# Creating directories
mkdir /home/amar/.config/suckless && cd /home/amar/.config/suckless

Compiling dwm

git clone git://git.suckless.org/dwm

- Install libxft and libxinerama with pacman:
```
sudo pacman -S libxft libxinerama xorg-xset arandr

```
- Change Directory cdinto dwm:
```
cd dwm/

```
- Make dwm:
```
sudo make clean install

```
- Change Directory cdout of dwm/
```
cd ..
dmenu
dmenu is mainly used as an application launcher
You can read more about it here: https://wiki.archlinux.org/title/Dmenu
- Clone dmenu
```
git clone git://git.suckless.org/dmenu

Compiling dmenu


- cd into dmenu
```
cd dmenu/

```
- Make dmenu
```
sudo make clean install

```
- Change Directory cdout of slstatus/
```
cd ..
- Clone slstatus:
```
git clone git://git.suckless.org/slstatus

Compiling slstatus


- cd into slstatus
```
cd slstatus/

```
- Make slstatus
```
sudo make clean install

```
- Change Directory cdout of slock/
```
cd ..
```
-----------------------------------------------------------
-Clone Slock
git clone git://git.suckless.org/slock

Compiling dmenu


- cd into slock
```
cd slock/
```
/all you need to do after is go in to the config.h file and change:
```
static const char *user  = "nobody";
static const char *group = "nogroup";

```
To this:

```
static const char *user  = "<USERNAME>";
static const char *group = "wheel";

```
Change to your username of computer./



- Make slock
```
sudo make clean install

```
----------------------------------------------------------------------------
sudo pacman -S numlockx
vim ~/.xinitrc
exec numlockx &
exec slstatus &
exec dwm

sudo pacman -Syu
sudo reboot

startx


Installing Yay (AUR Package Manager)


- cd into ~/programsfolder
```
cd ~/.config

```
- Install yay
```
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/yay.git
cd yay
makepkg -si

yay -S xautolock
yay -S yandex-browser
```

sudo pacman -S alsa-firmware alsa-utils pulseaudio pulseaudio-alsa pulseaudio-equalizer pulsemixer pamixer

sudo pacman -S flameshot nitrogen picom rofi pcmanfm nautilus thunar feh kate

sudo pacman -S dunst kitty firefox
###sudo pacman -S xclip xorg-xclipboard
sudo pacman -S thunderbird telegram-desktop unzip gnome-keyring man-pages-ru
```


```

- Get font(s)

```
sudo pacman -S ttf-font-awesome ttf-linux-libertine gnu-free-fonts
sudo pacman -S ttf-ubuntu-mono-nerd ttf-ubuntu-font-family ttf-ubuntu-nerd ttf-roboto
sudo pacman -S noto-fonts-emoji terminus-font
```

sudo vim /etc/X11/xorg.conf.d/00-keyboard.conf
Section "InputClass"
        Identifier "system-keyboard"
        MatchIsKeyboard "on"
        Option "XkbLayout" "us,ru"
        Option "XkbVariant" ","
        Option "XkbOptions" "grp:caps_toggle"
EndSection

pacman -Ss powerline
sudo pacman -S powerline
sudo pacman -S powerline-fonts awesome-terminal-fonts ttf-fira-code

sudo pacman -S slock
yay -S i3lock-next
sudo vim /usr/local/bin/lock
#!/bin/sh
i3lock \
  --inside-color=00000000 \
  --ring-color=ffffffff \
  --line-uses-ring \
  --keylayout 2 \
  --clock \
  --time-str="%H:%M" \
  --date-str="%A, %d %B %Y"
sudo chmod +x /usr/local/bin/lock
vim .xinitrc
exec flameshot &
exec nitrogen --restore &
exec dunst -config ~/.config/dunst/dunstrc &
exec numlockx &
exec sxhkd -c ~/.config/sxhkd/sxhkdrc &
#exec xautolock -time 20 -locker slock &
/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &
exec slstatus &
exec xrdb &

Включаем DPMS

xset +dpms

Устанавливаем время до перехода в режим ожидания

xset dpms 600 600 600  # 10 минут до выключения экрана

Запуск автоблокировки: блокируем через 20 мин бездействия

#exec xautolock -time 20 -locker "i3lock --image ~/Pictures/lockscreen.jpg --insidecolor=00000000 --ringcolor=ffffffff --line-uses-ring --keylayout 2" &
exec xautolock -time 20 -locker "lock" &
exec dwm

vim ~/.config/sxhkd/sxhkdrc
super + Return
alacritty
Print
flameshot gui
super + a
rofi -show drun
super + shift + y
yandex-browser-stable
super + shift + t
telegram-desktop

Ручная блокировка по Super+Shift+l

super + shift + l
lock


sudo chmod +x /usr/local/bin/lock
chmod +x .xinitrc
chmod 600 ~/.ssh/config

sudo pacman -S libreoffice-still
sudo pacman -S libreoffice-still-ru

